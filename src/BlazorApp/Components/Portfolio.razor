<section class="dark" id="portfolio" style="background-color: @PrimaryColor;">
    <h2>Our Games</h2>
    <div class="portfolio-container">
    @if (projects is null)
    {
        <p><em>Loading....</em></p>
    }
    else
    {
        <div class="portfolio-hero">
             @if (property is not null)
            {
                <p class="large">@property.Title</p>
            }
            @if (hero is not null)
            {
                <img src="@(hero.Src)" style="height: 90%; width: 100%; object-fit: cover;" alt="@(hero.Alt)" />
            }
        </div>
        <div class="container">
            @foreach (var project in projects)
            {
                <div class="box" key="@project.Title">
                    <h3 style="flex-basis: 40px;">@project.Title</h3>
                    <p class="small">@project.Description</p>
                </div>
            }
        </div>
    }
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    [Parameter]
    public string PrimaryColor { get; set; } = string.Empty;

    private List<Project>? projects;
    private SiteProperties? property;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<Project>>("sample-data/projects.json");
        property = await Http.GetFromJsonAsync<SiteProperties>("sample-data/siteproperties.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "portfolio");
    }
}
